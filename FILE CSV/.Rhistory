q()
8+3
#Creare una variabile
x<-3
x+1
#Assegnazione
x<-x+1
ls()
#Creare un vettore
c(1,2,3,4,5)
#Creare un vettore
array<-c(1,2,3,4,5)
#Creare un vettore
array<-c(1 ; 10)
#Creare un vettore
array<-c(1,2,3,4,5)
#Creare un vettore
array<-c(seq(1, 10, 1))
array1<-c(1,2,3,4,5)
array1<-c(1,2,3,4,5)
data()
# data() elenca i data-set di r
data("JohnsonJohnson")
force(JohnsonJohnson)
#Comando di servizio per avere i dati a posto
JJ <- data.frame(anno=1960:1980, trim=matrix(JohnsonJohnson), byrow=TRUE, ncol=4)
#Comando di servizio per avere i dati a posto
JJ <- data.frame(anno=1960:1980, trim=matrix(JohnsonJohnson), byrow=TRUE, ncol=4)
View(JJ)
#Funzione media
mean(JJ)
#Comando di servizio per avere i dati a posto
JJ <- data.frame(anno=1960:1980, trim=matrix(JohnsonJohnson, byrow=TRUE, ncol=4)
#Funzione media
mean(JJ)
#Funzione media
#Funzione media
#Funzione media
#Comando di servizio per avere i dati a posto
JJ <- data.frame(anno=1960:1980, trim=matrix(JohnsonJohnson, byrow=TRUE, ncol=4)
#Comando di servizio per avere i dati a posto
JJ <- data.frame(anno=1960:1980, trim=matrix(JohnsonJohnson, byrow=TRUE, ncol=4))
#Funzione media
JJ$trim.1
#Comando di servizio per avere i dati a posto
JJ<- data.frame(anno=1960:1980, trim=matrix(JohnsonJohnson, byrow=TRUE, ncol=4))
View(JJ)
JJ[1, 1]
#Funzione media
JJ$trim.1 #stampa la prima colonna
JJ[1,] #stampa la
JJ[,1] #
#Media
media <- apply
#Media
media <-apply(JJ, 2, mean) #apply applica la funzione su JJ, se il secondo argomento è = 1 allora lo applica sulle righe, se il secondo argomento è = 2 allora lo applica sulle colonne
media + 1
media
#Media
media <-apply(JJ[-1], 2, mean) #apply applica la funzione su JJ, se il secondo argomento è = 1 allora lo applica sulle righe, se il secondo argomento è = 2 allora lo applica sulle colonne
media
# data() elenca i data-set di r
data("JohnsonJohnson")
# data() elenca i data-set di r
data("JohnsonJohnson")
apply(JJ[-1], 2, sd) #sd sta per standard deviation (deviazione standard)
dev_std
dev_std<-apply(JJ[-1], 2, sd) #sd sta per standard deviation (deviazione standard)
dev_std
summary(JJ[-1])
boxplot(JJ$trim.1, JJ$trim.2, JJ$trim.3, JJ$trim.4)
boxplot(JJ$trim.1, JJ$trim.2, JJ$trim.3, JJ$trim.4, main="Guadagni trimestrali")
quartz()
boxplot(JJ$trim.1, JJ$trim.2, JJ$trim.3, JJ$trim.4, main="Guadagni trimestrali")
help("window")
boxplot(JJ$trim.1, JJ$trim.2, JJ$trim.3, JJ$trim.4, main="Guadagni trimestrali")
boxplot(JJ$trim.1, JJ$trim.2, JJ$trim.3, JJ$trim.4, main="Guadagni trimestrali")
dev_std
hist(JJ$trim.1)
hist(JJ$trim.1, main="Guadagni trimestrali"
hist(JJ$trim.1, main="Guadagni trimestrali"
hist(JJ$trim.1, main="Guadagni trimestrali")
hist(JJ$trim.1, main="Guadagni trimestrali")
hist(JJ$trim.2, main="Guadagni trimestrali")
hist(JJ$trim.3, main="Guadagni trimestrali")
hist(JJ$trim.4, main="Guadagni trimestrali")
hist(JJ$trim.1, main="Guadagni trimestrali")
hist(JJ$trim.2, main="Guadagni trimestrali")
hist(JJ$trim.3, main="Guadagni trimestrali")
hist(JJ$trim.4, main="Guadagni trimestrali")
hist(JJ$trim.1, main="Guadagni trimestrali")
hist(JJ$trim.4, main="Guadagni trimestrali")
hist(JJ$trim.1, main="Guadagni trimestrali")
hist(JJ$trim.2, main="Guadagni trimestrali")
hist(JJ$trim.3, main="Guadagni trimestrali")
hist(JJ$trim.4, main="Guadagni trimestrali")
hist(JJ$trim.1, main="Guadagni trimestrali 1")
hist(JJ$trim.2, main="Guadagni trimestrali 2")
hist(JJ$trim.3, main="Guadagni trimestrali 3")
hist(JJ$trim.4, main="Guadagni trimestrali 4")
pie(as.numeric(JJ[1, 2:5]), labels=legenda, main="Distribuzione guadagni 1960")
#Diagrammi a torta
legenda <- c("1°T", "2°T", "3°T", "4°T")
pie(as.numeric(JJ[1, 2:5]), labels=legenda, main="Distribuzione guadagni 1960")
record_etf<-ETF
ETF <- read.csv2("~/Desktop/Uni/Probabilità e statistica/Progetto PROBSTAT /FILE CSV/ETF.csv", encoding="UTF-8")
View(ETF)
INDICI <- read.csv2("~/Desktop/Uni/Probabilità e statistica/Progetto PROBSTAT /FILE CSV/INDICI.csv", encoding="UTF-8")
View(INDICI)
record_etf<-ETF
record_indici<-INDICI
plot(record_etf$RENDIMENTO.MEDIO..ANNUALE.)
plot(record_etf$X.1)
plot(record_etf$TIPO.DI.REPLICA)
plot(record_etf$TIPO.DI.REPLICA)
hist(record_etf$X.1)
hist(record_etf$TIPO.DI.REPLICA)
shapiro.test(record_etf$RENDIMENTO.MEDIO..ANNUALE.)
shapiro.test(record_etf$X)
shapiro.test(record_etf$SCARTO.ANNUALE.MEDIO)
qt(0.025, 3)
pt(0.025, 3)
test <- c(13.5,19.8,21.1,22.4,22.5,25.5,26.5)
boxplot(test)
#Intervallo di confidenza per media TER
t.test(record_etf$X*100, conf.level = 0.95)
source("~/Documents/Uni/Archivio/2 - 2 | Probabilità e statistica : 30L/Progetto PROBSTAT /progetto.R")
source("~/Documents/Uni/Archivio/2 - 2 | Probabilità e statistica : 30L/Progetto PROBSTAT /progetto.R")
source("~/Documents/Uni/Archivio/2 - 2 | Probabilità e statistica : 30L/Progetto PROBSTAT /progetto.R")
source("~/Documents/Uni/Archivio/2 - 2 | Probabilità e statistica : 30L/Progetto PROBSTAT /progetto.R")
source("~/Documents/Uni/Archivio/2 - 2 | Probabilità e statistica : 30L/Progetto PROBSTAT /progetto.R")
source("~/Documents/Uni/Archivio/2 - 2 | Probabilità e statistica : 30L/Progetto PROBSTAT /progetto.R")
source("~/Documents/Uni/Archivio/2 - 2 | Probabilità e statistica : 30L/Progetto PROBSTAT /progetto.R")
source("~/Documents/Uni/Archivio/2 - 2 | Probabilità e statistica : 30L/Progetto PROBSTAT /progetto.R")
source("~/Documents/Uni/Archivio/2 - 2 | Probabilità e statistica : 30L/Progetto PROBSTAT /progetto.R")
source("~/Documents/Uni/Archivio/2 - 2 | Probabilità e statistica : 30L/Progetto PROBSTAT /progetto.R")
source("~/Documents/Uni/Archivio/2 - 2 | Probabilità e statistica : 30L/Progetto PROBSTAT /progetto.R")
